// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// PSNE_sparseMat_cross
LogicalMatrix PSNE_sparseMat_cross(NumericVector NS, NumericMatrix Poffs, IntegerMatrix expindices, IntegerMatrix combisim, int ncross);
RcppExport SEXP GPGame_PSNE_sparseMat_cross(SEXP NSSEXP, SEXP PoffsSEXP, SEXP expindicesSEXP, SEXP combisimSEXP, SEXP ncrossSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type NS(NSSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Poffs(PoffsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type expindices(expindicesSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type combisim(combisimSEXP);
    Rcpp::traits::input_parameter< int >::type ncross(ncrossSEXP);
    rcpp_result_gen = Rcpp::wrap(PSNE_sparseMat_cross(NS, Poffs, expindices, combisim, ncross));
    return rcpp_result_gen;
END_RCPP
}
// getPoffsCross
NumericMatrix getPoffsCross(LogicalMatrix isNash, NumericMatrix Poffs, IntegerMatrix combisim, int nsim);
RcppExport SEXP GPGame_getPoffsCross(SEXP isNashSEXP, SEXP PoffsSEXP, SEXP combisimSEXP, SEXP nsimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type isNash(isNashSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Poffs(PoffsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type combisim(combisimSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    rcpp_result_gen = Rcpp::wrap(getPoffsCross(isNash, Poffs, combisim, nsim));
    return rcpp_result_gen;
END_RCPP
}
// PSNE_sparseMat
LogicalMatrix PSNE_sparseMat(NumericVector NS, NumericMatrix Poffs, IntegerMatrix expindices);
RcppExport SEXP GPGame_PSNE_sparseMat(SEXP NSSEXP, SEXP PoffsSEXP, SEXP expindicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type NS(NSSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Poffs(PoffsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type expindices(expindicesSEXP);
    rcpp_result_gen = Rcpp::wrap(PSNE_sparseMat(NS, Poffs, expindices));
    return rcpp_result_gen;
END_RCPP
}
// PSNE_sparseMat_sorted
LogicalMatrix PSNE_sparseMat_sorted(NumericVector NS, NumericMatrix Poffs, IntegerMatrix expindices);
RcppExport SEXP GPGame_PSNE_sparseMat_sorted(SEXP NSSEXP, SEXP PoffsSEXP, SEXP expindicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type NS(NSSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Poffs(PoffsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type expindices(expindicesSEXP);
    rcpp_result_gen = Rcpp::wrap(PSNE_sparseMat_sorted(NS, Poffs, expindices));
    return rcpp_result_gen;
END_RCPP
}
// getPoffs
NumericMatrix getPoffs(LogicalMatrix isNash, NumericMatrix Poffs, int nsim, int nobj);
RcppExport SEXP GPGame_getPoffs(SEXP isNashSEXP, SEXP PoffsSEXP, SEXP nsimSEXP, SEXP nobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type isNash(isNashSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Poffs(PoffsSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< int >::type nobj(nobjSEXP);
    rcpp_result_gen = Rcpp::wrap(getPoffs(isNash, Poffs, nsim, nobj));
    return rcpp_result_gen;
END_RCPP
}
